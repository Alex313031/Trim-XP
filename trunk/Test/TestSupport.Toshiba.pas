unit TestSupport.Toshiba;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, SysUtils,
  BufferInterpreter, BufferInterpreter.ATA, Support.Toshiba, Device.SMART.List,
  Support;

type
  // Test methods for class TToshibaNSTSupport

  TestTToshibaNSTSupport = class(TTestCase)
  strict private
    FToshibaNSTSupport: TToshibaNSTSupport;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestGetSupportStatus;
    procedure TestGetSMARTInterpreted;
  end;

implementation

const
  ToshibaIdentifyDevice: TSmallBuffer = (
    $40,$00,$FF,$3F,$37,$C8,$10,$00,$00,$00,$00,$00,$3F,$00,$00,$00,$00,$00,$00,$00,
    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$59,$59,
    $00,$00,$00,$00,$00,$00,$54,$4A,$41,$52,$31,$30,$32,$30,$4F,$54,$48,$53,$42,$49,
    $20,$41,$48,$54,$53,$4E,$4A,$4E,$31,$35,$47,$32,$53,$43,$20,$54,$20,$20,$20,$20,
    $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$10,$80,$00,$40,$00,$2F,
    $00,$40,$00,$00,$00,$00,$07,$00,$FF,$3F,$10,$00,$3F,$00,$10,$FC,$FB,$00,$10,$91,
    $FF,$FF,$FF,$0F,$00,$00,$07,$00,$03,$00,$78,$00,$78,$00,$78,$00,$78,$00,$20,$5F,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1F,$00,$0E,$E7,$86,$00,$4C,$01,$CC,$00,
    $F8,$03,$00,$00,$6B,$74,$09,$7D,$63,$41,$69,$74,$09,$BC,$63,$41,$3F,$20,$01,$00,
    $01,$00,$FE,$00,$FE,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $10,$E9,$9C,$2E,$00,$00,$00,$00,$00,$00,$08,$00,$00,$40,$00,$00,$00,$50,$DB,$80,
    $06,$11,$3E,$F0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1C,$40,
    $1C,$40,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$29,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$00,$01,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$3D,$00,$00,$00,$00,$00,$00,$40,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$7F,$10,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$FF,$FF,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$A5,$0B);

  ToshibaSMART: TSmallBuffer = (
    $10,$00,$01,$0A,$00,$64,$64,$00,$00,$00,$00,$00,$00,$00,$02,$05,
    $00,$64,$64,$00,$00,$00,$00,$00,$00,$00,$03,$07,$00,$64,$64,$00,
    $00,$00,$00,$00,$00,$00,$05,$13,$00,$64,$64,$00,$00,$00,$00,$00,
    $00,$00,$07,$0B,$00,$64,$64,$00,$00,$00,$00,$00,$00,$00,$08,$05,
    $00,$64,$64,$00,$00,$00,$00,$00,$00,$00,$09,$12,$00,$64,$64,$4D,
    $05,$00,$00,$00,$00,$00,$0A,$13,$00,$64,$64,$00,$00,$00,$00,$00,
    $00,$00,$0C,$12,$00,$64,$64,$6C,$04,$00,$00,$00,$00,$00,$A7,$22,
    $00,$64,$64,$00,$00,$00,$00,$00,$00,$00,$A8,$12,$00,$64,$64,$E7,
    $0B,$00,$00,$00,$00,$00,$A9,$13,$00,$64,$64,$64,$00,$00,$00,$00,
    $00,$00,$AD,$12,$00,$C7,$C7,$00,$00,$00,$00,$00,$00,$00,$AF,$13,
    $00,$64,$64,$00,$00,$00,$00,$00,$00,$00,$C0,$12,$00,$64,$64,$EF,
    $00,$00,$00,$00,$00,$00,$C2,$23,$00,$4A,$38,$1A,$00,$09,$00,$2C,
    $00,$00,$C5,$12,$00,$64,$64,$00,$00,$00,$00,$00,$00,$00,$F0,$13,
    $00,$64,$64,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$78,$00,$00,$5B,
    $03,$00,$01,$00,$02,$13,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$24);

  ToshibaThreshold: TSmallBuffer = (
    $10,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$32,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$32,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$05,$32,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$07,$32,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$32,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$09,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$0A,$32,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$0C,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$A7,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$A8,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$A9,$0A,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$AD,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$AF,$0A,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$C0,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$C2,$14,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$C5,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$F0,$32,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$A6);

procedure TestTToshibaNSTSupport.SetUp;
var
  Identify: TIdentifyDeviceResult;
  SMART: TSMARTValueList;
begin
  SMART := TSMARTValueList.Create;
  FillChar(Identify, SizeOf(Identify), 0);
  Identify.Model := 'TOSHIBA THNSNJ512GCST';
  Identify.Firmware := 'JTRA0102';
  Identify.IsDataSetManagementSupported := true;
  SMART := TSMARTValueList.Create;
  try
    FToshibaNSTSupport := TToshibaNSTSupport.Create(
      Identify, SMART);
  finally
    SMART.Free;
  end;
end;

procedure TestTToshibaNSTSupport.TearDown;
begin
  FToshibaNSTSupport.Free;
  FToshibaNSTSupport := nil;
end;

procedure TestTToshibaNSTSupport.TestGetSupportStatus;
var
  ReturnValue: TSupportStatus;
begin
  ReturnValue := FToshibaNSTSupport.GetSupportStatus;
  CheckEquals(true, ReturnValue.Supported = Supported, 'Supported / Toshiba Q');
  CheckEquals(true, ReturnValue.FirmwareUpdate,
    'Firmware update supported / Toshiba Q');
  CheckEquals(true,
    ReturnValue.TotalWriteType = TTotalWriteType.WriteNotSupported,
    'ReturnValue.TotalWriteType = TTotalWriteType.WriteNotSupported' +
    ' / Toshiba Q');
end;

procedure TestTToshibaNSTSupport.TestGetSMARTInterpreted;
var
  ReturnValue: TSMARTInterpreted;
  SMARTValueList: TSMARTValueList;
  ThresholdList: TSMARTValueList;
  BufferInterpreter: TATABufferInterpreter;
begin
  BufferInterpreter := TATABufferInterpreter.Create;
  SMARTValueList := BufferInterpreter.BufferToSMARTValueList(ToshibaSMART);
  ThresholdList := BufferInterpreter.BufferToSMARTThresholdValueList(
    ToshibaThreshold);
  try
    SMARTValueList.MergeThreshold(ThresholdList);
    ReturnValue := FToshibaNSTSupport.GetSMARTInterpreted(SMARTValueList);
  finally
    SMARTValueList.Free;
    ThresholdList.Free;
  end;
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTToshibaNSTSupport.Suite);
end.

