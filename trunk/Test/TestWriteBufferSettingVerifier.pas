unit TestWriteBufferSettingVerifier;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework,
  OS.WriteBufferSettingVerifier;

type
  // Test methods for class TWriteBufferSettingVerifier

  TestTWriteBufferSettingVerifier = class(TTestCase)
  strict private
    FWriteBufferSettingVerifier: TWriteBufferSettingVerifier;
    procedure TestSplittingModelAndFirmware(
      ModelAndFirmware,
      ExpectedModel, ExpectedFirmware: String);
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestSplittingHardDiskModelFirmware;
  end;

implementation

procedure TestTWriteBufferSettingVerifier.SetUp;
begin
  FWriteBufferSettingVerifier := TWriteBufferSettingVerifier.Create;
end;

procedure TestTWriteBufferSettingVerifier.TearDown;
begin
  FWriteBufferSettingVerifier.Free;
  FWriteBufferSettingVerifier := nil;
end;

procedure TestTWriteBufferSettingVerifier.TestSplittingHardDiskModelFirmware;
begin
  TestSplittingModelAndFirmware(
    'DiskWDC_WD10EZEX-00BN5A0____________________01.01A01',
    'WDC WD10EZEX-00BN5A0', '01.01A01');
  TestSplittingModelAndFirmware(
    'DiskWDC_WD10EZEX-00RKKA0____________________80.00A80',
    'WDC WD10EZEX-00RKKA0', '80.00A80');
  TestSplittingModelAndFirmware(
    'DiskWDC_WD10EZEX-00ZF5A0____________________80.00A80',
    'WDC WD10EZEX-00ZF5A0', '80.00A80');
end;

procedure TestTWriteBufferSettingVerifier.TestSplittingModelAndFirmware(
  ModelAndFirmware,
  ExpectedModel, ExpectedFirmware: String);
var
  RealModel, RealFirmware: String;
begin
  FWriteBufferSettingVerifier.SplitIntoModelAndFirmware(
    ModelAndFirmware, RealModel, RealFirmware);
  CheckEquals(ExpectedModel, RealModel,
    'Error in Model, ModelAndFirmware: ' + ModelAndFirmware);
  CheckEquals(ExpectedFirmware, RealFirmware,
    'Error in Firmware, ModelAndFirmware: ' + ModelAndFirmware);
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTWriteBufferSettingVerifier.Suite);
end.

